<%
/*
<!--

    Copyright (C) 2003-2007 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.space.model.Space;
  import org.exoplatform.social.core.space.spi.SpaceService;
  import org.exoplatform.service.ActivityComposerConfigurationService;
  import org.exoplatform.container.ExoContainerContext;
  import org.exoplatform.services.security.ConversationState;
  import org.exoplatform.services.security.Identity;
  
  def labelOutOfSpaceContext = _ctx.appRes("UISpacePortlet.label.OutOfSpaceContext"); 
  
  uicomponent.refresh();

  SpaceService spaceService = uicomponent.getSpaceService();
  Space currentSpace = uicomponent.getSpace();
  ActivityComposerConfigurationService activityComposerConfigurationService = (ActivityComposerConfigurationService) ExoContainerContext.getCurrentContainer().getComponentInstanceOfType(ActivityComposerConfigurationService.class);
  def listSpacesWithActivityComposer = activityComposerConfigurationService.getListSpacesWithActivityComposer();
  Identity currentIdentity = ConversationState.getCurrent().getIdentity();
  def canCompose = spaceService.isManager(currentSpace, Utils.getViewerRemoteId()) || currentIdentity.isMemberOf("/platform/administrators") || listSpacesWithActivityComposer.contains(currentSpace);

  print("<div class=\"visible-desktop\"></div>");
  print("<div class=\"visible-tablet\"></div>");
  print("<div class=\"visible-tabletL\"></div>");
  print("<div class=\"visible-phone\"></div>");
%>
<div class="uiSocApplication uiSpaceActivityStreamPortlet" id="$uicomponent.id">
  <div class="uiTabPane">
 	  <div class="uiSpaceActivitiesContainer">
      <%
        if (Utils.isSpaceContext()) {
          def requireJs = _ctx.getRequestContext().getJavascriptManager().getRequireJS();
          requireJs.require("SHARED/social-ui-activity", "activity")
                   .addScripts("activity.responsiveMobile('" + uicomponent.id + "');");
		  def children = uicomponent.getChildren();
		  for (def child : children) {
		  	if (!child.getName().equals("UIComposer") || canCompose) {
				uicomponent.renderChild(child);
			}
			else {%>
				<style>
					@media (min-width: 768px) {
						.uiDisplaySpaceActivities.uiActivitiesDisplay .activityTop {
							margin-top: 0;
						}
					}
				</style>
			<%}
		  }
        } else {
      %>
      <div class="uiSpaceMenu">$labelOutOfSpaceContext</div>
      <%}%>
    </div>
  </div>
</div>
